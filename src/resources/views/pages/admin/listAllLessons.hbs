<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">List All Lessons</h6>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>Status</th>
                        <th>Course</th>
                        <th>Lesson Title</th>
                        <th>Description</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    {{#each lessons}}
                    <tr>
                        <td style="color: {{#if this.isActive}} green {{else}} red {{/if}}">
                            {{#if this.isActive}} Active {{else}} Inactive {{/if}}
                        </td>
                        <td>{{this.course.name}}</td>
                        <td>{{this.title}}</td>
                        <td>{{this.description}}</td>
                        <td>
                            <a class="btn btn-sm btn-outline-success" href="/admin/lesson/edit/{{this._id}}">Edit</a>

                            {{#if this.isActive}}
                                <a onclick="confirmDeactivate('{{this._id}}')" class="btn btn-sm btn-outline-danger">Deactivate</a>
                            {{else}}
                                <a onclick="confirmActivate('{{this._id}}')" class="btn btn-sm btn-outline-warning">Activate</a>
                            {{/if}}

                            <a onclick="confirmDelete('{{this._id}}')" class="btn btn-sm btn-outline-danger">Delete</a>

                            <script>
                                function confirmDeactivate(lessonId) {
                                    Swal.fire({
                                        title: 'Deactivate this lesson?',
                                        icon: 'warning',
                                        showCancelButton: true,
                                        confirmButtonText: 'Yes',
                                        cancelButtonText: 'No',
                                    }).then((result) => {
                                        if (result.isConfirmed) {
                                            fetch(`/admin/lesson/deactivate/${lessonId}`, { method: 'POST' })
                                                .then(response => response.ok ? response.json() : Promise.reject('Error deactivating lesson'))
                                                .then(data => {
                                                    Swal.fire({
                                                        title: data.success ? 'Lesson deactivated!' : 'Could not deactivate lesson!',
                                                        icon: data.success ? 'success' : 'error',
                                                        confirmButtonText: 'OK'
                                                    }).then(() => { if (data.success) location.reload(); });
                                                })
                                                .catch(error => Swal.fire({ title: 'Error occurred!', icon: 'error', confirmButtonText: 'OK' }));
                                        }
                                    });
                                }

                                function confirmActivate(lessonId) {
                                    Swal.fire({
                                        title: 'Activate this lesson?',
                                        icon: 'info',
                                        showCancelButton: true,
                                        confirmButtonText: 'Yes',
                                        cancelButtonText: 'No',
                                    }).then((result) => {
                                        if (result.isConfirmed) {
                                            fetch(`/admin/lesson/activate/${lessonId}`, { method: 'POST' })
                                                .then(response => response.ok ? response.json() : Promise.reject('Error activating lesson'))
                                                .then(data => {
                                                    Swal.fire({
                                                        title: data.success ? 'Lesson activated!' : 'Could not activate lesson!',
                                                        icon: data.success ? 'success' : 'error',
                                                        confirmButtonText: 'OK'
                                                    }).then(() => { if (data.success) location.reload(); });
                                                })
                                                .catch(error => Swal.fire({ title: 'Error occurred!', icon: 'error', confirmButtonText: 'OK' }));
                                        }
                                    });
                                }

                                function confirmDelete(lessonId) {
                                    Swal.fire({
                                        title: 'Delete this lesson?',
                                        icon: 'warning',
                                        showCancelButton: true,
                                        confirmButtonText: 'Yes',
                                        cancelButtonText: 'No',
                                    }).then((result) => {
                                        if (result.isConfirmed) {
                                            fetch(`/admin/lesson/delete/${lessonId}`, { method: 'POST' })
                                                .then(response => response.ok ? response.json() : Promise.reject('Error deleting lesson'))
                                                .then(data => {
                                                    Swal.fire({
                                                        title: data.success ? 'Lesson deleted!' : 'Could not delete lesson!',
                                                        icon: data.success ? 'success' : 'error',
                                                        confirmButtonText: 'OK'
                                                    }).then(() => { if (data.success) location.reload(); });
                                                })
                                                .catch(error => Swal.fire({ title: 'Error occurred!', icon: 'error', confirmButtonText: 'OK' }));
                                        }
                                    });
                                }
                            </script>
                        </td>
                    </tr>
                    {{/each}}
                </tbody>
            </table>
        </div>
    </div>
</div>
